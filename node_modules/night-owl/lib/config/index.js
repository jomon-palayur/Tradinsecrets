import path from "node:path"

import { fail, info } from "../utils/logger.js"
import { exists } from "../utils/fs.js"
import { normalizeConfig } from "./normalize.js"
import defaults from "./defaults.js"

const config = { ...defaults }

export default config

export const setup = async () => {
  const configFile = "nightowl.js"
  const filepath = path.join(process.cwd(), configFile)

  const onError = (error) => {
    fail(`An error occured loading ${configFile}`, error)
  }

  let userConfig

  if (await exists(filepath)) {
    userConfig = await import(filepath)
      .then((lib) => normalizeConfig(lib.default, configFile))
      .catch((error) => {
        onError(error)

        return normalizeConfig(false, configFile)
      })
  } else {
    info(
      `${configFile} was not found in your project`,
      `The default configuration will be used\n`
    )
    userConfig = await normalizeConfig(false, configFile).catch(onError)
  }

  Object.assign(config, userConfig)
}
