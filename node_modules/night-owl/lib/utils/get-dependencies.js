import path from "node:path"
import precinct from "precinct"

import { warn } from "./logger.js"

const options = {
  type: "es6",
  includeCore: false,
}

const resolve = (filename, toResolve, result) => {
  try {
    for (const item of toResolve) {
      // Only relative paths are included in the results
      if (!item.startsWith(".")) continue

      // Get the path relative to the original file
      const dependency = path.join(path.dirname(filename), item)

      // Avoid circularity
      if (!result.includes(dependency)) {
        result.push(dependency)
        getFileDependencies(dependency, result)
      }
    }
  } catch (err) {
    warn(`Could not get dependencies for ${filename}`, err)
  }
}

export const getFileDependencies = (filename, result = []) => {
  resolve(filename, precinct.paperwork(filename, options), result)

  return result
}

export const getContentDependencies = (content, filename) => {
  const result = []

  resolve(filename, precinct(content, options), result)

  return result
}
