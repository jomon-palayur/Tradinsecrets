import { warn } from "../utils/logger.js"
import fm from "../templates/front-matter.js"
import merge from "deepmerge"

import templatejs from "./templatejs.js"
import clientjs from "./clientjs.js"
import css from "./css.js"
import pug from "./pug.js"
import sass from "./sass.js"
import markdown from "./markdown.js"
import yaml from "./yaml.js"
import json from "./json.js"
import handlebars from "./handlebars.js"

export const defaultCompilers = {
  templatejs,
  clientjs,
  css,
  pug,
  sass,
  markdown,
  yaml,
  json,
  handlebars,
}

export const wrapCompiler =
  (compile, options = {}) =>
  async (filename, content) => {
    const { data, content: body } = fm(content)

    const ext = ".html"

    const result = await compile(body, filename, options)

    // Some compilers may return content and no render function
    if (result.content) {
      if (result.render) {
        warn(
          `Compiler \`render\` method will overwrite \`content\``,
          `Check compiler for ${filename}`
        )
      } else {
        const rendered = result.content
        result.render = () => rendered
        delete result.content
      }
    }

    // Merge the front-matter with any compiler data provided
    if (result.data) {
      result.data = merge(data, result.data)
    }

    return {
      ext,
      data,
      filename,
      content,
      dependencies: [],
      ...result,
    }
  }
